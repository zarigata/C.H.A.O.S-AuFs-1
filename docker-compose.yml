# █████████████████████████████████████████████████████████████████
# █ C.H.A.O.S. DOCKER COMPOSE                                       █
# █ Development environment for the Communication Hub application    █
# █████████████████████████████████████████████████████████████████████

version: '3.8'

services:
  # [DB] PostgreSQL database
  postgres:
    image: postgres:14-alpine
    container_name: chaos-postgres
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: chaos_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # [CACHE] Redis for caching and real-time features
  redis:
    image: redis:7-alpine
    container_name: chaos-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # [API] Backend API server
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
      target: builder # Use builder target for development
    container_name: chaos-backend
    restart: unless-stopped
    volumes:
      - ./Backend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/chaos_db?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=3000
      - HOST=0.0.0.0
      - JWT_SECRET=dev_jwt_secret_key_change_in_production
      - REFRESH_TOKEN_SECRET=dev_refresh_secret_key_change_in_production
    command: npm run dev

  # [AI] Ollama for AI features (optional)
  ollama:
    image: ollama/ollama:latest
    container_name: chaos-ollama
    restart: unless-stopped
    volumes:
      - ollama-data:/root/.ollama
    ports:
      - "11434:11434"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

volumes:
  postgres-data:
  redis-data:
  ollama-data:
